//   https://leetcode.com/problems/longest-even-odd-subarray-with-threshold/
//   Time Comp... = O(n)

class Solution {
public:
    int longestAlternatingSubarray(vector<int>& nums, int td) {
        int n = nums.size();
        int j = 0; 
        bool flag = 0;
        int x = 0;
        int maxi = 0;
        int count = 0;
        for(int i = 0; i < n; i++){
            if(flag == 0){
                //find start index
                if(nums[i] % 2 == 0 && nums[i] <= td){
                    flag = 1;
                    j = i;
                    count = 0; // detect even or odd index of subarray
                }
            }
            if(flag == 1){
                //start calculation
                count++;
                if(((count % 2 == 0 && nums[i] % 2 != 0) || (count % 2 == 1 && nums[i] % 2 != 1)) && nums[i] <= td){
                    maxi = max(maxi , i - j + 1);
                }
                else{
                    flag = 0;
                }

                if(flag == 0){
                    //find start index
                    if(nums[i] % 2 == 0 && nums[i] <= td){
                        flag = 1;
                        j = i;
                        count = 1; // detect even or odd index of subarray
                    }
                }
                
            }
        }
        return maxi;
    }
};